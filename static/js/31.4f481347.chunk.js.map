{"version":3,"file":"static/js/31.4f481347.chunk.js","mappings":"6OAgBA,MCdA,EDc4CA,KAC1C,MAAMC,GAAWC,EAAAA,EAAAA,eACXC,GAAmBC,EAAAA,EAAAA,aAAYC,EAAAA,IAC/BC,GAAkBF,EAAAA,EAAAA,aAAYG,EAAAA,IAC9BC,GAAcJ,EAAAA,EAAAA,aAAYK,EAAAA,IAC1BC,GAAgBN,EAAAA,EAAAA,aAAYO,EAAAA,KAElCC,EAAAA,EAAAA,YAAU,KACRX,GAASY,EAAAA,EAAAA,MAA6B,GACrC,CAACZ,KAEJW,EAAAA,EAAAA,YAAU,KACRE,SAASC,MAAQ,uCAAwB,GACxC,IAEH,MAAMC,GAAgBC,EAAAA,EAAAA,cAAY,KAChC,GAAIP,IAAkBQ,EAAAA,EAAYC,QAAS,CACzC,MAAMC,EAAWZ,EAAc,EAC/BP,GAASoB,EAAAA,EAAAA,IAAwBD,GACnC,IACC,CAACnB,EAAUS,EAAeF,IAE7B,OACEc,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,WAAWC,EAAAA,EAAAA,GAAE,CAAEC,cAAc,IAAQL,UAC9B,OAAhBrB,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkB2B,WACjBL,EAAAA,EAAAA,KAACM,EAAAA,EAAmB,CAClBvB,YAAaA,EACbF,gBAAiBA,EACjBS,MAAM,qBACNiB,OAAQ7B,EAAiB2B,QACzBG,cAAejB,OAIrBS,EAAAA,EAAAA,KAACS,EAAAA,EAAS,MACT,C,iBElDA,SAAS7B,EAAoB8B,GAClC,OAAOA,EAAMH,OAAO7B,iBAAiBA,gBACvC,CAEO,SAASQ,EAAyBwB,GACvC,OAAOA,EAAMH,OAAO7B,iBAAiBiC,WACvC,CAEO,SAAS3B,EAA+B0B,GAC7C,OAAOA,EAAMH,OAAO7B,iBAAiBkC,oBACvC,CAEO,SAAS9B,EAAiC4B,GAC/C,QAAIA,EAAMH,OAAO7B,iBAAiBA,kBAE9BgC,EAAMH,OAAO7B,iBAAiBkC,qBAAuBF,EAAMH,OAAO7B,iBAAiBA,iBAAiBmC,WAK1G,C","sources":["pages/NowPlayingMovies/NowPlayingMovies.tsx","pages/NowPlayingMovies/index.ts","store/movie/now-playing/selectors.ts"],"sourcesContent":["import React, { FunctionComponent, useCallback, useEffect } from 'react';\n\nimport AppContent from 'components/ui/AppContent';\nimport AppFooter from 'components/partials/AppFooter';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FetchStatus } from 'common/types/fetch-status';\nimport { b } from 'components/ui/AppContent/AppContent';\nimport { AppCardInfinityList } from 'components/ui/AppCardList';\nimport {\n  getCurrentPageNowPlayingMovies,\n  getNowPlayingFetchStatus,\n  getNowPlayingMovies,\n  hasMorePagesWithNowPlayingMovies,\n} from 'store/movie/now-playing/selectors';\nimport { fetchNowPlayingMoviesStart, setNowPlayingSearchPage } from 'store/movie/now-playing/actions';\n\nconst NowPlayingMovies: FunctionComponent = () => {\n  const dispatch = useDispatch();\n  const nowPlayingMovies = useSelector(getNowPlayingMovies);\n  const hasMoreElements = useSelector(hasMorePagesWithNowPlayingMovies);\n  const currentPage = useSelector(getCurrentPageNowPlayingMovies);\n  const requestStatus = useSelector(getNowPlayingFetchStatus);\n\n  useEffect(() => {\n    dispatch(fetchNowPlayingMoviesStart());\n  }, [dispatch]);\n\n  useEffect(() => {\n    document.title = 'Now playing movies 🎞️';\n  }, []);\n\n  const loadMoreCards = useCallback(() => {\n    if (requestStatus !== FetchStatus.PENDING) {\n      const nextPage = currentPage + 1;\n      dispatch(setNowPlayingSearchPage(nextPage));\n    }\n  }, [dispatch, requestStatus, currentPage]);\n\n  return (\n    <>\n      <AppContent className={b({ withPaddings: true })}>\n        {nowPlayingMovies?.results && (\n          <AppCardInfinityList\n            currentPage={currentPage}\n            hasMoreElements={hasMoreElements}\n            title='Now playing movies'\n            movies={nowPlayingMovies.results}\n            onLoadHandler={loadMoreCards}\n          />\n        )}\n      </AppContent>\n      <AppFooter />\n    </>\n  );\n};\n\nexport default NowPlayingMovies;\n","import NowPlayingMovies from './NowPlayingMovies';\n\nexport default NowPlayingMovies;\n","import { ApplicationState } from 'store/store';\n\nexport function getNowPlayingMovies(state: ApplicationState) {\n  return state.movies.nowPlayingMovies.nowPlayingMovies;\n}\n\nexport function getNowPlayingFetchStatus(state: ApplicationState) {\n  return state.movies.nowPlayingMovies.fetchStatus;\n}\n\nexport function getCurrentPageNowPlayingMovies(state: ApplicationState) {\n  return state.movies.nowPlayingMovies.nowPlayingSearchPage;\n}\n\nexport function hasMorePagesWithNowPlayingMovies(state: ApplicationState) {\n  if (state.movies.nowPlayingMovies.nowPlayingMovies) {\n    return (\n      state.movies.nowPlayingMovies.nowPlayingSearchPage < state.movies.nowPlayingMovies.nowPlayingMovies.total_pages\n    );\n  }\n\n  return false;\n}\n"],"names":["NowPlayingMovies","dispatch","useDispatch","nowPlayingMovies","useSelector","getNowPlayingMovies","hasMoreElements","hasMorePagesWithNowPlayingMovies","currentPage","getCurrentPageNowPlayingMovies","requestStatus","getNowPlayingFetchStatus","useEffect","fetchNowPlayingMoviesStart","document","title","loadMoreCards","useCallback","FetchStatus","PENDING","nextPage","setNowPlayingSearchPage","_jsxs","_Fragment","children","_jsx","AppContent","className","b","withPaddings","results","AppCardInfinityList","movies","onLoadHandler","AppFooter","state","fetchStatus","nowPlayingSearchPage","total_pages"],"sourceRoot":""}